/*

Given a binary array, find the maximum number of consecutive 1s in this array.
Example 1:
Input: [1,1,0,1,1,1]
Output: 3
Explanation: The first two digits or the last three digits are consecutive 1s.
    The maximum number of consecutive 1s is 3.

Note: 
The input array will only contain 0 and 1.
The length of input array is a positive integer and will not exceed 10,000

*/

//Solution 1. 没有动脑子的人的解法
class Solution {
    public int findMaxConsecutiveOnes(int[] nums) {
        if(nums.length == 0) return 0;
        int[] result = new int[nums.length + 1];
        int count = 0;
        result[0] = 0;
        for(int i = 0; i < nums.length; i++){
            if(nums[i] == 1){
                result[count]++;
            }
            if(nums[i] == 0){
                count++;
                result[count] = 0;
            }
        }
        Arrays.sort(result);
        return result[nums.length];
    }
}

//Solution 2
class Solution {
    public int findMaxConsecutiveOnes(int[] nums) {
        if(nums.length == 0) return 0;
        int count = 0;
        int result = 0;
        for(int i = 0; i < nums.length; i++){
            if(nums[i] == 1){
                count++;
            }
            if(count > result){
                result = count;
            }
            if(nums[i] == 0){
                count = 0;
            }
        }
        return result;
    }
}
