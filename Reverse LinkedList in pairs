# Reverse pairs of elements in a singly-linked list.

# Examples

# L = null, after reverse is null
# L = 1 -> null, after reverse is 1 -> null
# L = 1 -> 2 -> null, after reverse is 2 -> 1 -> null
# L = 1 -> 2 -> 3 -> null, after reverse is 2 -> 1 -> 3 -> null

/**
 * class ListNode {
 *   public int value;
 *   public ListNode next;
 *   public ListNode(int value) {
 *     this.value = value;
 *     next = null;
 *   }
 * }
 */

Code

Iterative 

public ListNode reverseInPairs(ListNode head) {
    ListNode dummy = new ListNode(0);
    dummy.next = head;
    ListNode prev = dummy;
    while(head != null && head.next != null) {
       prev.next = head.next;
       ListNode temp = head.next.next;
       head.next.next = head;
       head.next = temp;
       prev = head;
       head = temp;

    }
    return dummy.next;
  }
