/*
Find the sum of all left leaves in a given binary tree.
Example: 
    3
   / \
  9  20
    /  \
   15   7

There are two left leaves in the binary tree, with values 9 and 15 respectively. Return 24.

*/

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public int sumOfLeftLeaves(TreeNode root) {
        
        int result = helper(root);
        
        return result;
    }
    private int helper(TreeNode root){
        if(root == null) return 0;
        if(root.left == null){
            if(root.right == null){
                return 0;
            } else{
                return helper(root.right);
            }
        }
        if(root.left.left == null && root.left.right == null){
            return root.left.val + helper(root.right);
        } else{
            return helper(root.right) + helper(root.left);
        }
    }
}
