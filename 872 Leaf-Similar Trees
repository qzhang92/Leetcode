/*
Consider all the leaves of a binary tree.  From left to right order, the values of those leaves form a leaf value sequence.



For example, in the given tree above, the leaf value sequence is (6, 7, 4, 9, 8).

Two binary trees are considered leaf-similar if their leaf value sequence is the same.

Return true if and only if the two given trees with head nodes root1 and root2 are leaf-similar.

 

Note:

Both of the given trees will have between 1 and 100 nodes.
*/

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public boolean leafSimilar(TreeNode root1, TreeNode root2) {
        if(root1 == null || root2 == null) return false;
        List<Integer> result1 = new ArrayList<>();
        List<Integer> result2 = new ArrayList<>();
        helper(root1, result1);
        helper(root2, result2);
        return result1.equals(result2);
    }
    private void helper(TreeNode root, List<Integer> result){
        if(root == null) return;
        if(root.left == null && root.right == null){
            result.add(root.val);
            return;
        }
        helper(root.left, result);
        helper(root.right, result);
    }
}
