/* 

Given a non-negative index k where k â‰¤ 33, return the kth index row of the Pascal's triangle.

Note that the row index starts from 0.

Example:

Input: 3
Output: [1,3,3,1] 

*/

class Solution {
    public List<Integer> getRow(int rowIndex) {
        List<Integer> result = new ArrayList<Integer>();
        List<Integer> front = new ArrayList<Integer>();
        List<Integer> current = new ArrayList<Integer>();
        front.add(1);
        current.add(1);
        for(int i = 0; i < rowIndex + 1; i++){
            front = current;
            current = new ArrayList<Integer>();
            for(int l = 0; l < i + 1; l++){
                if(l == 0){
                    current.add(1);
                } else if(l == i){
                    current.add(1);
                } else{
                    current.add(front.get(l) + front.get(l - 1));
                }
            }
        }
        result = current;
        return result;
    }
}
