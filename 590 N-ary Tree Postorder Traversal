/*

Given an n-ary tree, return the postorder traversal of its nodes' values.

For example, given a 3-ary tree:

 



 

Return its postorder traversal as: [5,6,3,2,4,1].

 
Note:

Recursive solution is trivial, could you do it iteratively?
*/

/*
// Definition for a Node.
class Node {
    public int val;
    public List<Node> children;

    public Node() {}

    public Node(int _val,List<Node> _children) {
        val = _val;
        children = _children;
    }
};
*/
class Solution {
    private List<Integer> result;
    public List<Integer> postorder(Node root) {
        result = new ArrayList<>();
        helper(root);
        return result;
    }
    private void helper(Node root){
        if(root == null) return;
        if(root.children != null){
            for(Node child : root.children){
                helper(child);
            }
        }
        result.add(root.val);
    }
}
