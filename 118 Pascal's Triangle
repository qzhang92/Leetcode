/*
Given a non-negative integer numRows, generate the first numRows of Pascal's triangle.


Example:

Input: 5
Output:
[
     [1],
    [1,1],
   [1,2,1],
  [1,3,3,1],
 [1,4,6,4,1]
]

*/

class Solution {
    public List<List<Integer>> generate(int numRows) {
        List<List<Integer>> result = new ArrayList<List<Integer>>();
        List<Integer> front = new ArrayList<Integer>();
        List<Integer> current = new ArrayList<Integer>();
        front.add(1);
        current.add(1);
        for(int i = 0; i < numRows; i++){
            front = current;
            current = new ArrayList<Integer>();
            for(int l = 0; l < i + 1; l++){
                if(l == 0){
                    current.add(1);
                } else if(l == i){
                    current.add(1);
                } else{
                    current.add(front.get(l) + front.get(l - 1));
                }
            }
            result.add(current);
        }
        return result;
    }
}
